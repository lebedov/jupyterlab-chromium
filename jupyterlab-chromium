#!/bin/bash

# Launch JupyterLab as Chromium application.
# Based upon http://christopherroach.com/articles/jupyterlab-desktop-app/
# Copyright 2018 Lev E. Givon
# MIT License (http://www.opensource.org/licenses/mit-license)

OPTS=`getopt -o hd: --long help,dir: -n $0 -- "$@"`
if [[ $? != 0 ]]; then
    exit 1;
fi

eval set -- "$OPTS"

DIR=`pwd`
while true; do
    case "$1" in
        -d|--dir)
            DIR=$2
            shift 2
            ;;
        -h|--help)
            echo "Usage: `basename $0` [-d BASEDIR]"
            echo "Start JupyterLab as Chromium app"
            echo ""
            echo " -d, --dir BASEDIR         cd to BASEDIR before starting"
            exit 0
            break
            ;;
        --)
            shift
            break
            ;;
        *)
            break
            ;;
    esac
done

cd $DIR 1>/dev/null 2>&1
if [[ $? != 0 ]]; then
    echo $DIR not found
    exit 1
fi

JUPYTER=`which jupyter`
if [[ ! $JUPYTER ]]; then
    echo jupyter not found
    exit 1
fi
CHROMIUM=`which chromium-browser`
if [[ ! $CHROMIUM ]]; then
    echo chromium-browser not found
    exit 1
fi

# Need jq to process json output:
JQ=`which jq`
if [[ ! $JQ ]]; then
    echo jq not found
    exit 1
fi

# Only start JupyterLab if it isn't already running:
JSON=`$JUPYTER notebook list --json`
if [[ ! $JSON ]]; then
    (trap '' HUP; $JUPYTER lab --no-browser &) > /dev/null <&1 2>&1 & disown
fi

# Get info about running JupyterLab server; check for a running server several
# times to give JupyterLab time to start:
MAX_ITER=10
for ((i=0; i<$MAX_ITER; i++)); do
    JSON=`$JUPYTER notebook list --json`
    if [[ $JSON ]]; then
        break
    fi
    sleep 0.5
done
if [[ $i == $MAX_ITER ]]; then
    echo cannot start jupyter
    exit 1
fi

URL=`echo $JSON | jq --raw-output '.url+("?token="+.token)'`
PORT=`echo $JSON | jq '.port'`

# Run Chromium with temporary new user dir so that it runs as a new process if
# other Chromium instances are already running:
TMPDIR=`mktemp -d`
$CHROMIUM --user-data-dir=$TMPDIR --app=$URL
rm -rf $TMPDIR

# Shut down jupyterlab server after Chromium exits:
$JUPYTER notebook stop $PORT
